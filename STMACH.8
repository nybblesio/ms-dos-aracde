;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё banked                                            Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё                                                   Ё
;Ё copyright (C) 2017 jeff panici                    Ё
;Ё https://nybbles.io                                Ё
;Ё                                                   Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё structures and macros                             Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
st_action struc [bp]
    st_code      db ?
    st_pad1      db ?
    st_enter_cb  dw ?
    st_callback  dw ?
    st_leave_cb  dw ?
ends

st_def macro
    db #1, 0
    dw #2, #3, #4
#em

st_push macro
    cs cmp  st_stack_ptr, st_stack_bot
    jz      >m2
    st_top
    st_leave
m2: push    bx
    cs sub  st_stack_ptr, 2
    cs mov  bx, st_stack_ptr
    cs mov  w[bx], #1
    cs mov  bp, #1
    pop     bx
    st_enter
#em

st_enter macro
    cs cmp  st_enter_cb, 0
    jz      >m0
    cs call [st_enter_cb]
m0:
#em

st_leave macro
    cs cmp  st_leave_cb, 0
    jz      >m1
    cs call [st_leave_cb]
m1:
#em

st_pop macro
    st_top
    st_leave
    cs add  st_stack_ptr, 2
    st_top
    st_enter
#em

st_top macro
    push    bx
    cs mov  bx, st_stack_ptr
    cs mov  bp, w[bx]
    pop     bx
#em

st_chk macro
    push    bp
    st_top
    mov     al, 0
    cs cmp  st_code, #1
    jne     >m0
    mov     al, 1
m0: pop     bp
#em

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё variables                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
st_stack_top:
    dw 16 dup(?)
st_stack_bot:

st_stack_ptr    dw  offset st_stack_bot

