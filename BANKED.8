;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ banked                                            ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³ copyright (C) 2017 jeff panici                    ³
;³ https://nybbles.io                                ³
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

code segment
    jmp     start

include constant.8
include macro.8
include string.8
include file.8
include control.8
include memory.8
include io.8
include input.8
include bank.8
include timer.8
include vga.8
include video.8
include mouse.8
include sound.8
include caret.8
include button.8
include txtfield.8
include stmach.8
include msgbox.8
include tiled.8

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ constants                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

STATE_NO_FILE   equ 1
STATE_NEW_FILE  equ 2
STATE_LOAD_FILE equ 3
STATE_BANK      equ 4
STATE_SPR_BANK  equ 5
STATE_TILE_BANK equ 6
STATE_PAL_BANK  equ 7
STATE_BG_BANK   equ 8
STATE_FONT_BANK equ 9
STATE_MSGBOX    equ 10

TAB_BAR_X equ 38
TAB_BAR_Y equ 160
TAB_BAR_H equ 10
TAB_BAR_B equ TAB_BAR_Y + TAB_BAR_H

PICK_BOX_Y equ TAB_BAR_B - 2
PICK_BOX_X equ 40
PICK_BOX_MY equ PICK_BOX_Y + 12
PICK_BOX_MX equ PICK_BOX_X + 4

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ structures & variables                            ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

frame_rate:
    s$_def  '00'

file_label:
    s$_def  'BANK FILE:'

editor_label:
    s$_def  'EDITOR:'

banks_label:
    s$_def  'BANKS:'

new_label:
    s$_def  'NEW'

load_label:
    s$_def  'LOAD'

save_label:
    s$_def  'SAVE'

exit_label:
    s$_def  'EXIT'

add_label:
    s$_def  'ADD'

ok_label:
    s$_def  'OK'

cancel_label:
    s$_def  'CANCEL'

remove_label:
    s$_def  'REMOVE'

clear_label:
    s$_def  'CLEAR'

props_label:
    s$_def  'PROPS'

pal_label:
    s$_def  'PAL'

tileset_label:
    s$_def  'TILES'

tool_title:
    s$_def  'BANKED'

tool_version:
    s$_def  'v1.0'

tool_author:
    s$_def  'JEFF PANICI'

tool_copyright:
    s$_def  '(C) 2017 NYBBLES.IO'

msgbox_title:
    s$_def  'BANKED SAYS'

pick_type_title:
    s$_def  'PICK'

tab_label:
    s$_def  '00:TILE'

block_label:
    s$_def  'BLOCK #'

block_number:
    s$_def  '00'

of_label:
    s$_def  'OF'

block_total_number:
    s$_def  '00'

up_arrow_char:
    s$_defc 24

down_arrow_char:
    s$_defc 25

right_arrow_char:
    s$_defc 26

left_arrow_char:
    s$_defc 27

type_tile:
    s$_def  'TILE'

type_spr:
    s$_def  'SPR '

type_font:
    s$_def  'FONT'

type_bg:
    s$_def  'BG  '

type_pal:
    s$_def  'PAL '

type_snd:
    s$_def  'SND '

type_mod:
    s$_def  'MOD '

type_name_lookup:
    dw      type_spr, type_tile, type_bg, type_font, type_pal, type_snd, type_mod

exist_bank_msg1:
    s$_def  'BANK FILE IS ALREADY ACTIVE'
exist_bank_msg2:
    s$_def  'DO YOU WANT TO START OVER?'

buttons:
btn_new:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, new_label, 8 by 22, 0 by 20, 38 by 8, 9 by 0, 0 by 0, btn_new_cb

btn_load:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, load_label, 7 by 32, 0 by 30, 38 by 8, 9 by 0, 0 by 0, btn_load_cb

btn_save:
    bt_def F_BTN_VISIBLE, save_label, 7 by 42, 0 by 40, 38 by 8, 9 by 0, 0 by 0,btn_save_cb

btn_exit:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, exit_label, 7 by 52, 0 by 50, 38 by 8, 9 by 0, 0 by 0, btn_exit_cb

btn_add:
    bt_def F_BTN_VISIBLE, add_label, 10 by TAB_BAR_B + 6, 0 by TAB_BAR_B + 4, 38 by 8, 9 by 0, 0 by 0, btn_add_bank_cb

btn_remove:
    bt_def F_BTN_VISIBLE, remove_label, 2 by TAB_BAR_B + 16, 0 by TAB_BAR_B + 14, 38 by 8, 9 by 0, 0 by 0, btn_remove_bank_cb

btn_clear:
    bt_def F_BTN_VISIBLE, clear_label, 5 by TAB_BAR_B + 26, 0 by TAB_BAR_B + 24, 38 by 8, 9 by 0, 0 by 0, btn_clear_bank_cb

btn_props:
    bt_def F_BTN_VISIBLE, props_label, 5 by TAB_BAR_B + 36, 0 by TAB_BAR_B + 34, 38 by 8, 9 by 0, 0 by 0, btn_props_bank_cb

btn_pal:
    bt_def F_BTN_VISIBLE, pal_label, 10 by TAB_BAR_B + 52, 0 by TAB_BAR_B + 50, 38 by 8, 6 by 0, 0 by 0, btn_pal_cb

btn_tileset:
    bt_def F_BTN_VISIBLE, tileset_label, 4 by TAB_BAR_B + 62, 0 by TAB_BAR_B + 60, 38 by 8, 6 by 0, 0 by 0, btn_tileset_cb

btn_ok:
    bt_def F_BTN_NONE, ok_label, 220 by 107, 205 by 105, 38 by 8, 9 by 0, 0 by 0, btn_ok_cb

btn_cancel:
    bt_def F_BTN_NONE, cancel_label, 167 by 107, 165 by 105, 38 by 8, 9 by 0, 0 by 0, btn_cancel_cb

btn_tab1:
    bt_def F_BTN_NODRAW or F_BTN_ENABLED, 0, 0, TAB_BAR_X + 10 by TAB_BAR_Y + 1, 48 by 9,9 by 0, 0 by 0, btn_tab1_cb

btn_tab2:
    bt_def F_BTN_NODRAW or F_BTN_ENABLED, 0, 0, TAB_BAR_X + 60 by TAB_BAR_Y + 1, 48 by 9,9 by 0, 0 by 0, btn_tab2_cb

btn_tab3:
    bt_def F_BTN_NODRAW or F_BTN_ENABLED, 0, 0, TAB_BAR_X + 110 by TAB_BAR_Y + 1, 48 by 9, 9 by 0, 0 by 0, btn_tab3_cb

btn_tab4:
    bt_def F_BTN_NODRAW or F_BTN_ENABLED, 0, 0, TAB_BAR_X + 160 by TAB_BAR_Y + 1, 48 by 9, 9 by 0, 0 by 0, btn_tab4_cb

btn_bank_prev:
    bt_def F_BTN_TXTONLY or F_BTN_VISIBLE, left_arrow_char, TAB_BAR_X + 2 by TAB_BAR_Y + 3, TAB_BAR_X + 2 by TAB_BAR_Y + 3, 6 by 6, 0, 0, btn_bank_prev_cb

btn_bank_next:
    bt_def F_BTN_TXTONLY or F_BTN_VISIBLE, right_arrow_char, 248 by TAB_BAR_Y + 3, 248 by TAB_BAR_Y + 3, 6 by 6, 0, 0, btn_bank_next_cb

btn_block_prev:
    bt_def F_BTN_TXTONLY or F_BTN_VISIBLE, up_arrow_char, 248 by TAB_BAR_Y + 14, 248 by TAB_BAR_Y + 14, 6 by 6, 0, 0, btn_block_prev_cb

btn_block_next:
    bt_def F_BTN_TXTONLY or F_BTN_VISIBLE, down_arrow_char, 248 by 248, 248 by 248, 6 by 6, 0, 0, btn_block_next_cb

btn_type_tile:
    bt_def F_BTN_NONE, type_tile, PICK_BOX_MX + 4 by PICK_BOX_MY + 2, PICK_BOX_MX by PICK_BOX_MY, 28 by 8, 9 by 0, 0 by 0, btn_type_tile_cb

btn_type_spr:
    bt_def F_BTN_NONE, type_spr, PICK_BOX_MX + 6 by PICK_BOX_MY + 12, PICK_BOX_MX by PICK_BOX_MY + 10, 28 by 8, 9 by 0, 0 by 0, btn_type_spr_cb

btn_type_font:
    bt_def F_BTN_NONE, type_font, PICK_BOX_MX + 4 by PICK_BOX_MY + 22, PICK_BOX_MX by PICK_BOX_MY + 20, 28 by 8, 9 by 0, 0 by 0, btn_type_font_cb

btn_type_pal:
    bt_def F_BTN_NONE, type_pal, PICK_BOX_MX + 6 by PICK_BOX_MY + 32, PICK_BOX_MX by PICK_BOX_MY + 30, 28 by 8, 9 by 0, 0 by 0, btn_type_pal_cb

btn_type_bg:
    bt_def F_BTN_NONE, type_bg, PICK_BOX_MX + 8 by PICK_BOX_MY + 42, PICK_BOX_MX by PICK_BOX_MY + 40, 28 by 8, 9 by 0, 0 by 0, btn_type_bg_cb

btn_type_snd:
    bt_def F_BTN_NONE, type_snd, PICK_BOX_MX + 6 by PICK_BOX_MY + 52, PICK_BOX_MX by PICK_BOX_MY + 50, 28 by 8, 9 by 0, 0 by 0, btn_type_snd_cb

btn_type_mod:
    bt_def F_BTN_NONE, type_mod, PICK_BOX_MX + 6 by PICK_BOX_MY + 62, PICK_BOX_MX by PICK_BOX_MY + 60, 28 by 8, 9 by 0, 0 by 0, btn_type_mod_cb

    bt_def F_BTN_END, 0, 0, 0, 0, 0, 0

valid_fname_keys:
    vk_def   002h,    0,  '1'
    vk_def   003h,    0,  '2'
    vk_def   004h,    0,  '3'
    vk_def   005h,    0,  '4'
    vk_def   006h,    0,  '5'
    vk_def   007h,    0,  '6'
    vk_def   008h,    0,  '7'
    vk_def   009h,    0,  '8'
    vk_def   00ah,    0,  '9'
    vk_def   00bh,    0,  '0'
    vk_def   01eh,    0,  'A'
    vk_def   030h,    0,  'B'
    vk_def   02eh,    0,  'C'
    vk_def   020h,    0,  'D'
    vk_def   012h,    0,  'E'
    vk_def   021h,    0,  'F'
    vk_def   022h,    0,  'G'
    vk_def   023h,    0,  'H'
    vk_def   017h,    0,  'I'
    vk_def   024h,    0,  'J'
    vk_def   025h,    0,  'K'
    vk_def   026h,    0,  'L'
    vk_def   032h,    0,  'M'
    vk_def   031h,    0,  'N'
    vk_def   018h,    0,  'O'
    vk_def   019h,    0,  'P'
    vk_def   010h,    0,  'Q'
    vk_def   013h,    0,  'R'
    vk_def   01fh,    0,  'S'
    vk_def   014h,    0,  'T'
    vk_def   016h,    0,  'U'
    vk_def   02fh,    0,  'V'
    vk_def   011h,    0,  'W'
    vk_def   02dh,    0,  'X'
    vk_def   015h,    0,  'Y'
    vk_def   02ch,    0,  'Z'
    vk_def   034h,    0,  '.'
    vk_def   00ch,    0,  '-'
    vk_def   00ch, 02ah,  '_'
    vk_def   0,       0,   0

valid_hex_keys:
    vk_def   002h,   0,  '1'
    vk_def   003h,   0,  '2'
    vk_def   004h,   0,  '3'
    vk_def   005h,   0,  '4'
    vk_def   006h,   0,  '5'
    vk_def   007h,   0,  '6'
    vk_def   008h,   0,  '7'
    vk_def   009h,   0,  '8'
    vk_def   00ah,   0,  '9'
    vk_def   00bh,   0,  '0'
    vk_def   01eh,   0,  'A'
    vk_def   030h,   0,  'B'
    vk_def   02eh,   0,  'C'
    vk_def   020h,   0,  'D'
    vk_def   012h,   0,  'E'
    vk_def   021h,   0,  'F'
    vk_def   0,      0,   0

valid_dec_keys:
    vk_def   002h,   0,  '1'
    vk_def   003h,   0,  '2'
    vk_def   004h,   0,  '3'
    vk_def   005h,   0,  '4'
    vk_def   006h,   0,  '5'
    vk_def   007h,   0,  '6'
    vk_def   008h,   0,  '7'
    vk_def   009h,   0,  '8'
    vk_def   00ah,   0,  '9'
    vk_def   00bh,   0,  '0'
    vk_def   0,      0,   0

text_fields:
bank_file_field:
    tf_def  F_TXT_READONLY, temp_fname, 42 by 10, valid_fname_keys, bank_fname_cb

    tf_def  F_TXT_END, 0, 0, 0, 0

no_file_state:
    st_def  STATE_NO_FILE, no_file_cb

new_file_state:
    st_def  STATE_NEW_FILE, new_file_cb

load_file_state:
    st_def  STATE_LOAD_FILE, load_file_cb

bank_state:
    st_def  STATE_BANK, bank_cb

tile_bank_state:
    st_def  STATE_TILE_BANK, tile_bank_cb

spr_bank_state:
    st_def  STATE_SPR_BANK, spr_bank_cb

pal_bank_state:
    st_def  STATE_PAL_BANK, pal_bank_cb

font_bank_state:
    st_def  STATE_FONT_BANK, font_bank_cb

bg_bank_state:
    st_def  STATE_BG_BANK, bg_bank_cb

msgbox_state:
    st_def  STATE_MSGBOX, msgbox_cb

msgbox_lines:
msgbox_line0:   s$_resv 32
msgbox_line1:   s$_resv 32
msgbox_line2:   s$_resv 32
msgbox_line3:   s$_resv 32
msgbox_line4:   s$_resv 32
msgbox_line5:   s$_resv 32
msgbox_line6:   s$_resv 32
msgbox_line7:   s$_resv 32
msgbox_line8:   s$_resv 32
msgbox_line9:   s$_resv 32
                db     0feh

temp_fname:
    s$_resv     12

bank_fname:
    fnameresv   12

fps             db  ?
exit_code       db  ?
temp_ptr        dw  ?
mouse_data:     dw  2 dup (?)
viewer_cb:      dw  0
selected_tb     db  0
pick_box_draw   db  0
bank_start_off  dw  0
bank_start_idx  db  0
bank_prev_flag  db  0
bank_next_flag  db  0

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ msgbox_show                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
msgbox_show:
    st_chk  STATE_MSGBOX
    cmp     al, 1
    je      >l0
    st_push msgbox_state
    mov     b mb_enabled, 1
    bt_set  btn_ok, F_BTN_ENABLED or F_BTN_VISIBLE
    bt_set  btn_cancel, F_BTN_ENABLED or F_BTN_VISIBLE
l0: ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ msgbox_cb                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
msgbox_cb:
    bt_fire mouse_data, buttons
    key
    cmp     al, K_ESC
    je      >l0
    cmp     al, K_ENTER
    je      >l1
    mov     al, 1
    ret
l0: call    btn_cancel_cb
    ret
l1: call    btn_ok_cb
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ no_file_cb                                        ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
no_file_cb:
    bt_fire mouse_data, buttons
    mov     al, 0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ new_file_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
new_file_cb:
    mb_chk
    cmp     al, 1
    jnz     >l0

    ; if OK,  we need to do more work to reset state

    st_pop
    bt_set  btn_new, F_BTN_ENABLED or F_BTN_VISIBLE
    tf_set  bank_file_field, F_TXT_READONLY
    ret
l0: tf_upd  text_fields
    mov     al, 1
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ load_file_cb                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
load_file_cb:
    tf_upd  text_fields
    mov     al, 1
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ enter_bank_state                                  ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
enter_bank_state:
    st_push bank_state
    mov     selected_tb, 0
    bt_set  btn_add, F_BTN_ENABLED or F_BTN_VISIBLE
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ bank_fname_cb                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bank_fname_cb:
    cmp     al, 0
    je      >l0
    s$_cpy  bank_fname + 1, temp_fname + 1, 12
    st_pop
    call    enter_bank_state
    bt_set  btn_new, F_BTN_ENABLED or F_BTN_VISIBLE
    ret
l0: bt_set  btn_new, F_BTN_ENABLED or F_BTN_VISIBLE
    st_pop
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ bank_cb                                           ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bank_cb:
    bt_fire mouse_data, buttons
    mov     al, 0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ tile_bank_cb                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
tile_bank_cb:
    te_draw 8, 15
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ spr_bank_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
spr_bank_cb:
    te_draw 16, 7
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ pal_bank_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
pal_bank_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ bg_bank_cb                                        ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bg_bank_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ font_bank_cb                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
font_bank_cb:
    te_draw 5, 24
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ exit_cb                                           ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
exit_cb:
    call    tm_shutdown
    call    io_shutdown
    call    vg_shutdown
    mov     ah, 04ch
    mov     al, exit_code
    int     21h
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_tab1_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_tab1_cb:
    push    bp, bx
    mov     bl, 1
    add     bl, bank_start_idx
    mov     selected_tb, bl
    mov     bp, viewer_cb
    mov     w[bp], tile_viewer_cb
    pop     bx, bp
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_tab2_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_tab2_cb:
    push    bp, bx
    mov     bl, 2
    add     bl, bank_start_idx
    mov     selected_tb, bl
    mov     bp, viewer_cb
    mov     w[bp], spr_viewer_cb
    pop     bx, bp
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_tab3_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_tab3_cb:
    push    bp, bx
    mov     bl, 3
    add     bl, bank_start_idx
    mov     selected_tb, bl
    pop     bx, bp
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_tab4_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_tab4_cb:
    push    bp, bx
    mov     bl, 4
    add     bl, bank_start_idx
    mov     selected_tb, bl
    pop     bx, bp
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_ok_cb                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_ok_cb:
    mov     b mb_enabled, 0
    mov     b mb_action_flag, 1
    mov     b mb_result, 1
    bt_set  btn_ok, F_BTN_NONE
    bt_set  btn_cancel, F_BTN_NONE
    st_pop
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_cancel_cb                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_cancel_cb:
    mov     al, 0
    mov     b mb_enabled, 0
    mov     b mb_action_flag, 1
    mov     b mb_result, 0
    bt_set  btn_ok, F_BTN_NONE
    bt_set  btn_cancel, F_BTN_NONE
    st_pop
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_new_cb                                        ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_new_cb:
    push    bp
    bt_set  btn_new, F_BTN_VISIBLE
    st_chk  STATE_BANK
    push    ax
    st_push new_file_state
    tf_set  bank_file_field, F_TXT_EDIT
    tf_load bank_file_field
    xor     bx, bx
    mov     bl, txt_char_idx
    call    txt_end
    pop     ax
    cmp     al, 1
    jnz     >l0
    xor     cx, cx
    mov     bp, exist_bank_msg1
    mov     cl, b[bp]
    s$_cpy  msgbox_line3 + 1, exist_bank_msg1 + 1, cx
    mov     bp, exist_bank_msg2
    mov     cl, b[bp]
    s$_cpy  msgbox_line4 + 1, exist_bank_msg2 + 1, cx
    pop     bp
    call    msgbox_show
l0: pop     bp
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_load_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_load_cb:
    bt_set  btn_load, F_BTN_VISIBLE
    call    msgbox_show
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_save_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_save_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ pick_box_hide                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
pick_box_hide:
    mov     b pick_box_draw, 0
    bt_set  btn_type_tile, F_BTN_NONE
    bt_set  btn_type_spr, F_BTN_NONE
    bt_set  btn_type_font, F_BTN_NONE
    bt_set  btn_type_pal, F_BTN_NONE
    bt_set  btn_type_bg, F_BTN_NONE
    bt_set  btn_type_snd, F_BTN_NONE
    bt_set  btn_type_mod, F_BTN_NONE
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ pick_box_show                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
pick_box_show:
    mov     b pick_box_draw, 1
    bt_set  btn_type_tile, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_spr, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_font, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_pal, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_bg, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_snd, F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_type_mod, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_add_limit                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_add_limit:
    push    ax
    mov     ax, bank_hdrs_off
    cmp     ax, type bank_block * 14
    jb      >l0
    bt_set  btn_add, F_BTN_VISIBLE
l0: pop     ax
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_add_bank_cb                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_add_bank_cb:
    call    pick_box_show
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_remove_bank_cb                                ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_remove_bank_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_clear_bank_cb                                 ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_clear_bank_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_props_bank_cb                                 ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_props_bank_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_pal_cb                                        ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_pal_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_tileset_cb                                    ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_tileset_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ bank_prev                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bank_prev:
    push    ax
    mov     ax, bank_start_off
    cmp     ax, 0
    jz      >l0
    sub     ax, type bank_block
    mov     bank_start_off, ax
    dec     bank_start_idx
l0: pop     ax
    ret
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_bank_prev_cb                                  ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_bank_prev_cb:
    mov     bank_prev_flag, 1
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ bank_next                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
bank_next:
    push    ax, bx
    mov     ax, bank_start_off
    mov     bx, bank_hdrs_off
    sub     bx, type bank_block
    cmp     ax, bx
    jae     >l0
    add     ax, type bank_block
    mov     bank_start_off, ax
    inc     bank_start_idx
l0: pop     bx, ax
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_bank_next_cb                                  ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_bank_next_cb:
    mov     bank_next_flag, 1
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_block_prev_cb                                 ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_block_prev_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_block_next_cb                                 ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_block_next_cb:
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_tile_cb                                  ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_tile_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_TILE, 16
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_spr_cb                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_spr_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_SPR, 16
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_font_cb                                  ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_font_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_FONT, 2
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_bg_cb                                    ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_bg_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_BG, 2
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_pal_cb                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_pal_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_PAL, 2
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_snd_cb                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_snd_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_SND, 16
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_type_mod_cb                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_type_mod_cb:
    call    pick_box_hide
    bk_new  BANK_TYPE_MOD, 16
    call    btn_add_limit
    bt_set  btn_remove, F_BTN_VISIBLE or F_BTN_ENABLED
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ btn_exit_cb                                       ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
btn_exit_cb:
    jmp     exit_cb

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ tm_fps                                            ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
tm_fps:
    tm_clr
    mov     di, frame_rate + 1
    xor     ax, ax
    cs mov  al, fps
    call    s$_dec2
    cs mov  fps, 0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ _tb_tab_draw                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_tb_tab_draw:
    push    bp
    mov     bp, sp
    mov     ax, [bp + 4]
    mov     bx, [bp + 6]
    pop     bp
    add     al, bank_start_idx
    cmp     al, selected_tb
    setz    al
    mov     dx, 1 by 0  ; dark blue background
    cmp     al, 1
    jnz     >l0
    mov     dx, 9 by 0  ; purple-ish background
l0: inc     bh
    vg_fbox bx, 45 by 9, dx
    vg_hl   bx, 45, 0 by 0
    dec     bh
    inc     bl
    vg_vl   bx, 9, 0 by 0
    add     bh, 2
    add     bl, 2
    mov     dx, 8 by 0
    cmp     al, 1
    jnz     >l1
    mov     dx, 7 by 0
l1: es mov  al, md_id
    cs mov  di, tab_label + 1
    call    s$_dec2
    es mov  al, md_type
    dec     al
    xlatw   al, type_name_lookup
    inc     si
    s$_cpy  tab_label + 4, si, 4
    vg_str  micro_font, tab_label, bx, dx, 1
    add     bh, 44
    sub     bl, 2
    vg_vl   bx, 9, 0 by 0
    ret

tb_draw macro
    push    bp, ax, bx, cx, dx
    push    #1, #2
    call    _tb_tab_draw
    add     sp, 4
    pop     dx, cx, bx, ax, bp
#em

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ _tb_bar_draw                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_tb_bar_draw:
    vg_hl   TAB_BAR_X by TAB_BAR_Y - 1, 218, 0 by 0
    vg_fbox TAB_BAR_X by TAB_BAR_Y, 218 by TAB_BAR_H,8 by 0
    vg_hl   TAB_BAR_X by TAB_BAR_B, 218, 0 by 0
    vg_str  micro_font, banks_label, 2 by TAB_BAR_Y + 3, 7 by 0, 1
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ _tb_tabs_draw                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_tb_tabs_draw:
    cs cmp  bank_hdrs_off, 5 * type bank_block
    jb      >l0
    bt_set  btn_bank_prev, F_BTN_TXTONLY or F_BTN_VISIBLE or F_BTN_ENABLED
    bt_set  btn_bank_next, F_BTN_TXTONLY or F_BTN_VISIBLE or F_BTN_ENABLED
l0: bk_ptr
    mov     bp, bank_start_off
    mov     ax, 1
    mov     bh, TAB_BAR_X + 10
    mov     bl, TAB_BAR_Y + 1
    mov     cx, 4
l1: es cmp  md_id, 0
    jz      >l2
    tb_draw bx, ax
    inc     ax
    add     bh, 50
    add     bp, type bank_block
    loop    l1
l2: ret

tb_tabs macro
    push    es, ax, cx, bx
    call    _tb_bar_draw
    call    _tb_tabs_draw
    pop     bx, cx, ax, es
#em

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ tile_viewer_cb                                    ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
tile_viewer_cb:
    mov     dx, 6
    mov     bh, TAB_BAR_X + 4
    mov     bl, TAB_BAR_Y + 26
l0: mov     cx, 22
l1: vg_fbox bx, 8 by 8, 4 by 0
    add     bh, 9
    loop    l1
    dec     dx
    add     bl, 9
    mov     bh, TAB_BAR_X + 4
    cmp     dx, 0
    jnz     l0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ spr_viewer_cb                                     ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
spr_viewer_cb:
    mov     dx, 3
    mov     bh, TAB_BAR_X + 4
    mov     bl, TAB_BAR_Y + 28
l0: mov     cx, 12
l1: vg_fbox bx, 16 by 16, 4 by 0
    add     bh, 17
    loop    l1
    dec     dx
    add     bl, 17
    mov     bh, TAB_BAR_X + 4
    cmp     dx, 0
    jnz     l0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ _tb_viewer_draw                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_tb_viewer_draw:
    vg_str  micro_font, block_label, TAB_BAR_X + 4 by TAB_BAR_Y + 14, 7 by 0, 1
    vg_str  micro_font, block_number, TAB_BAR_X + 48 by TAB_BAR_Y + 14, 7 by 0, 1
    vg_str  micro_font, of_label, TAB_BAR_X + 66 by TAB_BAR_Y + 14, 7 by 0, 1
    vg_str  micro_font, block_total_number, TAB_BAR_X + 84 by TAB_BAR_Y + 14, 7 by 0, 1
    mov     bp, viewer_cb
    cmp     w[bp], 0
    jz      >l0
    call    [bp]
l0: ret

tb_vwr macro
    push    bp
    call    _tb_viewer_draw
    pop     bp
#em

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ _pb_draw                                          ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_pb_draw:
    vg_fbox PICK_BOX_X by PICK_BOX_Y, 35 by 85, 8 by 0
    vg_box  PICK_BOX_X by PICK_BOX_Y, 35 by 85, 0 by 0
    vg_fbox PICK_BOX_X + 2 by PICK_BOX_Y + 2, 32 by 7,  9 by 0
    vg_str  micro_font, pick_type_title, PICK_BOX_X + 6 by PICK_BOX_Y + 3, 7 by 0, 1
    ret

pb_draw macro
    call    _pb_draw
#em

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ base_draw                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
base_draw:
    vg_fbox 0 by 0, 38 by 256, 8 by 0
    vg_vl   38 by 0, 256, 0 by 0

    vg_str  micro_font, file_label,   42 by 2, 7 by 0, 1
    vg_str  micro_font, editor_label,206 by 2, 7 by 0, 1

    vg_str  micro_font, tool_title,  1 by 2, 0 by 0, 1
    vg_str  micro_font, tool_title,  2 by 3, 7 by 0, 1

    vg_str  micro_font, tool_version, 16 by 8, 0 by 0, 0
    vg_str  micro_font, tool_version, 17 by 9, 7 by 0, 0

    tb_tabs
    tb_vwr

    cmp     b pick_box_draw, 1
    jnz     >l0
    pb_draw

l0: ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ draw                                              ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
draw:
    vg_clr
    call    base_draw
    tf_draw text_fields
    cu_draw
    mb_draw
    bt_draw buttons
    mo_draw mouse_data, cursor_pointer2
#if DEBUG
    vg_str  micro_font, frame_rate, 2 by 250, 0 by 0, 1
#endif
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ show                                              ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
show:
    vg_flip
    cs inc  fps
    cs cmp  fps, 99
    ja      >l1
    ret
l1: cs mov  fps, 99
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ allocate                                          ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
allocate:
    mm_resv SZ_CTRL_RAM / 16,  offset ctrl_ram_ptr
    mm_set  ctrl_ram_ptr, 0, SZ_CTRL_RAM, 0
    mm_resv SZ_VRAM / 16, offset back_buffer_ptr
    mm_set  back_buffer_ptr, 0, SZ_VRAM, 0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ tm_bk_scroll                                      ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
tm_bk_scroll:
    tm_clr
    cmp     bank_next_flag, 1
    jz      >l0
    cmp     bank_prev_flag, 1
    jz      >l1
    ret
l0: call    bank_next
    jmp     >l2
l1: call    bank_prev
l2: mov     bank_next_flag, 0
    mov     bank_prev_flag, 0
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ init                                              ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
init:
    mm_init
    call    allocate
    call    bk_init
    call    vg_init
    call    mo_init
    call    io_init
    call    tm_init
    call    cu_init
    tm_new  tm_fps, 60
    tm_new  tm_bk_scroll, 6
    st_push no_file_state
    ret

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ update                                            ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
update:
    tm_fire
    mo_read mouse_data
    st_top
    call    [st_callback]
    cmp     al, 1
    je      >p1
p0: key
    cmp     al, 0
    je      >p1
    cmp     al, K_ESC
    je      >p2
p1: ret
p2: jmp     exit_cb

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ start                                             ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
start:
    call    init

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ tool_loop                                         ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
tool_loop:
    call    update
    call    draw
    call    show
    jmp     tool_loop
