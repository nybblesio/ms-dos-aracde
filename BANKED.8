;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё banked                                            Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё                                                   Ё
;Ё copyright (C) 2017 jeff panici                    Ё
;Ё https://nybbles.io                                Ё
;Ё                                                   Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды

code segment
    jmp     start

include constant.8
include macro.8
include string.8
include file.8
include control.8
include memory.8
include io.8
include input.8
include bank.8
include timer.8
include vga.8
include video.8
include mouse.8
include sound.8
include caret.8
include button.8
include txtfield.8
include stmach.8
include msgbox.8

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё constants                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды

STATE_NO_FILE   equ 1
STATE_NEW_FILE  equ 2
STATE_LOAD_FILE equ 3
STATE_NO_BANK   equ 4
STATE_SPR_BANK  equ 5
STATE_TILE_BANK equ 6
STATE_PAL_BANK  equ 7
STATE_BG_BANK   equ 8
STATE_MSGBOX    equ 9

TAB_BAR_X equ 38
TAB_BAR_Y equ 160
TAB_BAR_H equ 10
TAB_BAR_B equ TAB_BAR_Y + TAB_BAR_H

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё structures & variables                            Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды

even

temp_ptr    dw  ?
mouse_data: dw  2 dup (?)

frame_rate:
    strdef  '00'

file_label:
    strdef  'BANK FILE:'

editor_label:
    strdef  'EDITOR:'

banks_label:
    strdef  'BANKS:'

new_label:
    strdef  'NEW'

load_label:
    strdef  'LOAD'

save_label:
    strdef  'SAVE'

exit_label:
    strdef  'EXIT'

add_label:
    strdef  'ADD'

ok_label:
    strdef  'OK'

cancel_label:
    strdef  'CANCEL'

remove_label:
    strdef  'REMOVE'

clear_label:
    strdef  'CLEAR'

props_label:
    strdef  'PROPS'

pal_label:
    strdef  'PAL'

tileset_label:
    strdef  'TILES'

tool_title:
    strdef  'BANKED'

tool_version:
    strdef  'v1.0'

tool_author:
    strdef  'JEFF PANICI'

tool_copyright:
    strdef  '(C) 2017 NYBBLES.IO'

msgbox_title:
    strdef  'BANKED SAYS'

test_label:
    strdef  '00:TILE'

block_label:
    strdef  'BLOCK #'

block_number:
    strdef  '00'

of_label:
    strdef  'OF'

block_total_number:
    strdef  '00'

up_arrow_char:
    str_defc 24

down_arrow_char:
    str_defc 25

right_arrow_char:
    str_defc 26

left_arrow_char:
    str_defc 27

buttons:
btn_new:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, new_label, 8 by 22, 0 by 20, 38 by 8, btn_new_cb

btn_load:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, load_label, 7 by 32, 0 by 30, 38 by 8, btn_load_cb

btn_save:
    bt_def F_BTN_VISIBLE, save_label, 7 by 42, 0 by 40, 38 by 8, btn_save_cb

btn_exit:
    bt_def F_BTN_ENABLED or F_BTN_VISIBLE, exit_label, 7 by 52, 0 by 50, 38 by 8, btn_exit_cb

btn_add:
    bt_def F_BTN_VISIBLE, add_label, 10 by TAB_BAR_B + 6, 0 by TAB_BAR_B + 4, 38 by 8, btn_add_bank_cb

btn_remove:
    bt_def F_BTN_VISIBLE, remove_label, 2 by TAB_BAR_B + 16, 0 by TAB_BAR_B + 14, 38 by 8, btn_remove_bank_cb

btn_clear:
    bt_def F_BTN_VISIBLE, clear_label, 5 by TAB_BAR_B + 26, 0 by TAB_BAR_B + 24, 38 by 8, btn_clear_bank_cb

btn_props:
    bt_def F_BTN_VISIBLE, props_label, 5 by TAB_BAR_B + 36, 0 by TAB_BAR_B + 34, 38 by 8, btn_props_bank_cb

btn_pal:
    bt_def F_BTN_VISIBLE, pal_label, 10 by TAB_BAR_B + 52, 0 by TAB_BAR_B + 50, 38 by 8, btn_pal_cb

btn_tileset:
    bt_def F_BTN_VISIBLE, tileset_label, 4 by TAB_BAR_B + 62, 0 by TAB_BAR_B + 60, 38 by 8, btn_tileset_cb

btn_ok:
    bt_def F_BTN_NONE, ok_label, 220 by 107, 205 by 105, 38 by 8, btn_ok_cb

btn_cancel:
    bt_def F_BTN_NONE, cancel_label, 167 by 107, 165 by 105, 38 by 8, btn_cancel_cb

    bt_def F_BTN_END, 0, 0, 0, 0

valid_fname_keys:
    vk_def   002h,    0,  '1'
    vk_def   003h,    0,  '2'
    vk_def   004h,    0,  '3'
    vk_def   005h,    0,  '4'
    vk_def   006h,    0,  '5'
    vk_def   007h,    0,  '6'
    vk_def   008h,    0,  '7'
    vk_def   009h,    0,  '8'
    vk_def   00ah,    0,  '9'
    vk_def   00bh,    0,  '0'
    vk_def   01eh,    0,  'A'
    vk_def   030h,    0,  'B'
    vk_def   02eh,    0,  'C'
    vk_def   020h,    0,  'D'
    vk_def   012h,    0,  'E'
    vk_def   021h,    0,  'F'
    vk_def   022h,    0,  'G'
    vk_def   023h,    0,  'H'
    vk_def   017h,    0,  'I'
    vk_def   024h,    0,  'J'
    vk_def   025h,    0,  'K'
    vk_def   026h,    0,  'L'
    vk_def   032h,    0,  'M'
    vk_def   031h,    0,  'N'
    vk_def   018h,    0,  'O'
    vk_def   019h,    0,  'P'
    vk_def   010h,    0,  'Q'
    vk_def   013h,    0,  'R'
    vk_def   01fh,    0,  'S'
    vk_def   014h,    0,  'T'
    vk_def   016h,    0,  'U'
    vk_def   02fh,    0,  'V'
    vk_def   011h,    0,  'W'
    vk_def   02dh,    0,  'X'
    vk_def   015h,    0,  'Y'
    vk_def   02ch,    0,  'Z'
    vk_def   034h,    0,  '.'
    vk_def   00ch,    0,  '-'
    vk_def   00ch, 02ah,  '_'
    vk_def   0,       0,   0

valid_hex_keys:
    vk_def   002h,   0,  '1'
    vk_def   003h,   0,  '2'
    vk_def   004h,   0,  '3'
    vk_def   005h,   0,  '4'
    vk_def   006h,   0,  '5'
    vk_def   007h,   0,  '6'
    vk_def   008h,   0,  '7'
    vk_def   009h,   0,  '8'
    vk_def   00ah,   0,  '9'
    vk_def   00bh,   0,  '0'
    vk_def   01eh,   0,  'A'
    vk_def   030h,   0,  'B'
    vk_def   02eh,   0,  'C'
    vk_def   020h,   0,  'D'
    vk_def   012h,   0,  'E'
    vk_def   021h,   0,  'F'
    vk_def   0,      0,   0

valid_dec_keys:
    vk_def   002h,   0,  '1'
    vk_def   003h,   0,  '2'
    vk_def   004h,   0,  '3'
    vk_def   005h,   0,  '4'
    vk_def   006h,   0,  '5'
    vk_def   007h,   0,  '6'
    vk_def   008h,   0,  '7'
    vk_def   009h,   0,  '8'
    vk_def   00ah,   0,  '9'
    vk_def   00bh,   0,  '0'
    vk_def   0,      0,   0

text_fields:
bank_file_field:
    tf_def  F_TXT_READONLY, temp_fname, 42 by 10, valid_fname_keys, bank_fname_cb

    tf_def  F_TXT_END, 0, 0, 0, 0

no_file_state:
    st_def   STATE_NO_FILE, no_file_cb

new_file_state:
    st_def   STATE_NEW_FILE, new_file_cb

load_file_state:
    st_def   STATE_LOAD_FILE, load_file_cb

no_bank_state:
    st_def   STATE_NO_BANK, no_bank_cb

tile_bank_state:
    st_def   STATE_TILE_BANK, tile_bank_cb

spr_bank_state:
    st_def   STATE_SPR_BANK, spr_bank_cb

msgbox_state:
    st_def   STATE_MSGBOX, msgbox_cb

msgbox_lines:
msgbox_line0:   strresv 32
msgbox_line1:   strresv 32
msgbox_line2:   strresv 32
msgbox_line3:   strresv 32
msgbox_line4:   strresv 32
msgbox_line5:   strresv 32
msgbox_line6:   strresv 32
msgbox_line7:   strresv 32
msgbox_line8:   strresv 32
msgbox_line9:   strresv 32
                db     0feh

temp_fname:
    strresv     12

bank_fname:
    filename    '            '

fps                 db      ?
exit_code           db      ?
draw_flag           db      ?

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё msgbox_show                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
msgbox_show:
    st_chk  STATE_MSGBOX
    cmp     al, 1
    je      >l0
    st_push msgbox_state
    mov     b msgbox_enabled, 1
    bt_set  btn_ok, F_BTN_ENABLED or F_BTN_VISIBLE
    bt_set  btn_cancel, F_BTN_ENABLED or F_BTN_VISIBLE
l0: ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё msgbox_cb                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
msgbox_cb:
    bt_fire mouse_data, buttons
    key
    cmp     al, K_ESC
    je      >l0
    cmp     al, K_ENTER
    je      >l1
    mov     al, 1
    ret
l0: call    btn_cancel_cb
    ret
l1: call    btn_ok_cb
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё no_file_cb                                        Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
no_file_cb:
    bt_fire mouse_data, buttons
    mov     al, 0
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё new_file_cb                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
new_file_cb:
    tf_upd  text_fields
    mov     al, 1
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё load_file_cb                                      Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
load_file_cb:
    tf_upd  text_fields
    mov     al, 1
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё bank_fname_cb                                     Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
bank_fname_cb:
    cmp     al, 0
    je      >l1

    ; filename can't be empty
    ; enforce .bnk extension


l1: bt_set  btn_new, F_BTN_ENABLED or F_BTN_VISIBLE
    push    bp
    st_top
    cmp     st_code, STATE_NEW_FILE
    jne     >l0
    st_pop
l0: pop     bp
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё no_bank_cb                                        Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
no_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё tile_bank_cb                                      Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
tile_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё spr_bank_cb                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
spr_bank_cb:
    frect   17 by 43, 144 by 144, 8 by 0
    rect    42 by 16, 146 by 145, 0 by 0
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё exit_cb                                           Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
exit_cb:
    call    tm_shutdown
    call    io_shutdown
    call    vg_shutdown
    mov     ah, 04ch
    mov     al, exit_code
    int     21h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_ok_cb                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_ok_cb:
    mov     al, 1
    mov     msgbox_enabled, 0
    bt_set  btn_ok, F_BTN_NONE
    bt_set  btn_cancel, F_BTN_NONE
    st_pop
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_cancel_cb                                     Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_cancel_cb:
    mov     al, 0
    mov     msgbox_enabled, 0
    bt_set  btn_ok, F_BTN_NONE
    bt_set  btn_cancel, F_BTN_NONE
    st_pop
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_new_cb                                        Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_new_cb:
    bt_set  btn_new, F_BTN_VISIBLE
    st_push new_file_state
    mov     bp, bank_file_field
    mov     txt_flags, F_TXT_EDIT
    xor     bx, bx
    mov     bl, txt_char_idx
    call    txt_end
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_load_cb                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_load_cb:
    bt_set  btn_load, F_BTN_VISIBLE
    call    msgbox_show
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_save_cb                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_save_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_add_bank_cb                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_add_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_remove_bank_cb                                Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_remove_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_clear_bank_cb                                 Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_clear_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_props_bank_cb                                 Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_props_bank_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_pal_cb                                        Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_pal_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_tileset_cb                                    Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_tileset_cb:
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё btn_exit_cb                                       Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
btn_exit_cb:
    jmp     exit_cb

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё fps_timer                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
fps_timer:
    tm_clr
    mov     di, frame_rate + 1
    xor     ax, ax
    cs mov  al, fps
    call    put_dec2
    cs mov  fps, 0
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё _tab_draw                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
; 27 ->  28 <-
_tab_draw:
    mov     bp, sp
    mov     bx, [bp + 2]
    inc     bh
    frect   bx, 45 by 9, 9 by 0
    hline   bx, 45, 0 by 0
    dec     bh
    inc     bl
    vline   bx, 9, 0 by 0
    add     bh, 2
    add     bl, 2
    string  micro_font, test_label, bx, 7 by 0, 1
    add     bh, 44
    sub     bl, 2
    vline   bx, 9, 0 by 0
    ret

tb_draw macro
    push    bp, ax, bx, cx, dx
    push    #1
    call    _tab_draw
    add     sp, 2
    pop     dx, cx, bx, ax, bp
#em

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё base_draw                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
base_draw:
    frect   0 by 0, 38 by 256, 8 by 0
    vline   38 by 0, 256, 0 by 0

    string  micro_font, file_label,   42 by 2, 7 by 0, 1
    string  micro_font, editor_label,206 by 2, 7 by 0, 1

    string  micro_font, tool_title,  1 by 2, 0 by 0, 1
    string  micro_font, tool_title,  2 by 3, 7 by 0, 1

    string  micro_font, tool_version, 16 by 8, 0 by 0, 0
    string  micro_font, tool_version, 17 by 9, 7 by 0, 0

    hline   TAB_BAR_X by TAB_BAR_Y - 1, 218, 0 by 0
    frect   TAB_BAR_X by TAB_BAR_Y, 218 by TAB_BAR_H,8 by 0
    hline   TAB_BAR_X by TAB_BAR_B, 218, 0 by 0
    string  micro_font, banks_label, 2 by TAB_BAR_Y + 3, 7 by 0, 1

    mov     cx, 4
    mov     bh, TAB_BAR_X + 10
    mov     bl, TAB_BAR_Y + 1
l0: tb_draw bx
    add     bh, 50
    loop    l0

    string  micro_font, left_arrow_char, TAB_BAR_X + 2 by TAB_BAR_Y + 3, 7 by 0, 1
    string  micro_font, right_arrow_char, 248 by TAB_BAR_Y + 3, 7 by 0, 1
    string  micro_font, up_arrow_char, 248 by TAB_BAR_Y + 14, 7 by 0, 1
    string  micro_font, down_arrow_char, 248 by 248, 7 by 0, 1

    string  micro_font, block_label, TAB_BAR_X + 4 by TAB_BAR_Y + 14, 7 by 0, 1
    string  micro_font, block_number, TAB_BAR_X + 48 by TAB_BAR_Y + 14, 7 by 0, 1
    string  micro_font, of_label, TAB_BAR_X + 66 by TAB_BAR_Y + 14, 7 by 0, 1
    string  micro_font, block_total_number, TAB_BAR_X + 84 by TAB_BAR_Y + 14, 7 by 0, 1

    frect   43 by 20, 128 by 128, 8 by 0
    rect    42 by 20, 128 by 128, 0 by 0

;#if TILES
    ; tile selection grid example
    mov     dx, 6
    mov     bh, TAB_BAR_X + 4
    mov     bl, TAB_BAR_Y + 26
l2: mov     cx, 22
l1: frect   bx, 8 by 8, 4 by 0
    add     bh, 9
    loop    l1
    dec     dx
    add     bl, 9
    mov     bh, TAB_BAR_X + 4
    cmp     dx, 0
    jnz     l2

    ; drawing surface example
    mov     dx, 8
    mov     bh, 43
    mov     bl, 21
l4: mov     cx, 8
l3: frect   bx, 15 by 15, 3 by 0
    add     bh, 16
    loop    l3
    add     bl, 16
    mov     bh, 43
    dec     dx
    cmp     dx, 0
    jnz     l4
;#endif

#if SPRS
    ; sprite selection grid example
    mov     dx, 3
    mov     bh, TAB_BAR_X + 4
    mov     bl, TAB_BAR_Y + 28
l2: mov     cx, 12
l1: frect   bx, 16 by 16, 4 by 0
    add     bh, 17
    loop    l1
    dec     dx
    add     bl, 17
    mov     bh, TAB_BAR_X + 4
    cmp     dx, 0
    jnz     l2

    ; drawing surface example
    mov     dx, 16
    mov     bh, 43
    mov     bl, 21
l4: mov     cx, 16
l3: frect   bx, 7 by 7, 3 by 0
    add     bh, 8
    loop    l3
    add     bl, 8
    mov     bh, 43
    dec     dx
    cmp     dx, 0
    jnz     l4
#endif

    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё draw                                              Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
draw:
    cmp     draw_flag, 1
    je      >l0
    ret

l0: mov     draw_flag, 0
    clear
    call    base_draw
    tf_draw text_fields
    cu_draw
    mb_draw
    bt_draw buttons

l5:
#if DEBUG
    string  micro_font, frame_rate, 2 by 250, 0 by 0, 1
#endif
    mo_draw mouse_data, cursor_pointer2

    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё show                                              Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
show:
    is_vblank
    cmp     al, 0
    jnz     >l0
    ret
l0: flip
    wait_novblank
    cs inc  fps
    cs mov  draw_flag, 1
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё allocate                                          Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
allocate:
    alloc   SZ_CTRL_RAM / 16,  offset ctrl_ram_ptr
    memset  ctrl_ram_ptr, 0, SZ_CTRL_RAM, 0

    mov     es, ctrl_ram_ptr
    mov     bp, 0

    alloc   SZ_TILE_BANK / 16, offset temp_ptr
    memset  temp_ptr, 0, SZ_TILE_BANK, 024h
    es_movm c_bg_tiles, temp_ptr

    alloc   SZ_TILE_BANK / 16, offset temp_ptr
    memset  temp_ptr,   0, SZ_TILE_BANK, 07fh
    es_movm c_spr_tiles, temp_ptr

    alloc   SZ_VRAM / 16, offset back_buffer_ptr
    memset  back_buffer_ptr, 0, SZ_VRAM, 0

    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё init                                              Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
init:
    call    allocate
    call    bk_init
    call    vg_init
    call    mo_init
    call    io_init
    call    tm_init
    call    cu_init
    tm_new  offset fps_timer, 60
    st_push no_file_state
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё update                                            Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
update:
    tm_fire
    mo_read mouse_data
    st_top
    call    [st_callback]
    cmp     al, 1
    je      >p1
p0: key
    cmp     al, 0
    je      >p1
    cmp     al, K_ESC
    je      >p2
p1: ret
p2: jmp     exit_cb

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё start                                             Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
start:
    call    init

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё tool_loop                                         Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
tool_loop:
    call    update
    call    draw
    call    show
    jmp     tool_loop
