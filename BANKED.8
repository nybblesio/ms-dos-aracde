;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ banked                                            ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³ copyright (C) 2017 jeff panici                    ³
;³ https://nybbles.io                                ³
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

code segment
    jmp     start

include constant.8
include macro.8
include string.8
include input.8
include control.8
include memory.8
include io.8
include timer.8
include video.8
include mouse.8

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ editor constants                                  ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
STATE_NO_FILE   equ 1
STATE_NO_BANK   equ 2
STATE_SPR_BANK  equ 3
STATE_TILE_BANK equ 4
STATE_PAL_BANK  equ 5
STATE_BG_BANK   equ 6

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ editor structures & variables                     ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
even

state               db      STATE_NO_FILE
exit_code           db      ?
temp_ptr            dw      ?
fps                 db      ?
frame_rate:         strdef  '00'
file_label:         strdef  'BANK FILE:'
editor_label:       strdef  'EDITOR:'
banks_label:        strdef  'BANKS:'
new_label:          strdef  'NEW'
load_label:         strdef  'LOAD'
save_label:         strdef  'SAVE'
add_label:          strdef  'ADD'
remove_label:       strdef  'REMOVE'
clear_label:        strdef  'CLEAR'
tool_title:         strdef  'BANKED'
tool_version:       strdef  'v1.0'
tool_author:        strdef  'JEFF PANICI'
tool_copyright:     strdef  '(C) 2017 NYBBLES.IO'

state_action struc [bp]
    state_code      db ?
    state_callback  dw ?
ends

state_actions:
    db  STATE_NO_FILE
    dw  no_file

    db  STATE_NO_BANK
    dw  no_bank

    db  STATE_TILE_BANK
    dw  tile_bank

    db  STATE_SPR_BANK
    dw  spr_bank

    db  0
    dw  0

inp_actions:
    db  KEY_LEFT
    dw  cur_left

    db  KEY_RIGHT
    dw  cur_right

    db  KEY_UP
    dw  cur_up

    db  KEY_DOWN
    dw  cur_down

    db  0
    dw  0

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ main tool engine                                  ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
no_file:
    ret

no_bank:
    ret

tile_bank:
    ret

spr_bank:
    frect   17 by 43, 144 by 144, 8 by 0
    rect    42 by 16, 146 by 145, 0 by 0
    ret

cur_right:
    ret

cur_down:
    ret

cur_left:
    ret

cur_up:
    ret

fps_timer:
    reset_timer
    debug
    mov     di, frame_rate + 1
    xor     ax, ax
    cs mov  al, fps
    call    put_dec2
    cs mov  fps, 0
    ret

;
; allocate memory
;
allocate:
    alloc   CTRL_RAM_SIZE / 16,  offset ctrl_ram_ptr
    memset  ctrl_ram_ptr, 0, CTRL_RAM_SIZE, 0

    mov     es, ctrl_ram_ptr
    mov     bp, 0

    alloc   TILE_BANK_SIZE / 16, offset temp_ptr
    memset  temp_ptr, 0, TILE_BANK_SIZE, 024h
    es_movm c_bg_tiles, temp_ptr

    alloc   TILE_BANK_SIZE / 16, offset temp_ptr
    memset  temp_ptr,   0, TILE_BANK_SIZE, 07fh
    es_movm c_spr_tiles, temp_ptr

    alloc   VRAM_SIZE / 16, offset back_buffer_ptr
    memset  back_buffer_ptr, 0, VRAM_SIZE, 0

    ret

;
; initialize everything
;
init:
    call    allocate
    mode_13
    mode_q
    call    mouse_init
    call    init_keyboard_isr
    call    init_timer_isr

    ldfreetimer
    es mov  tm_callback, fps_timer
    es mov  tm_frames, 60
    es mov  tm_count, 60
    es mov  tm_flags, F_TIMER_ENABLED

    ret

;
; update the tool state
;
update:
    fire_timers
    cs mov  bp, inp_actions
    mov     cx, 4
p0: next_key
    cmp     al, 0
    je      >p4
    cmp     al, KEY_ESC
    je      >p5
    dec     cx
    cmp     cx, 0
    jz      >p4
p1: cs mov  bl, inp_scan_code
    cmp     bl, 0
    jnz     >p2
    cs mov  bp, inp_actions
    jmp     p0
p2: cmp     al, bl
    je      >p3
    cs add  bp, type inp_action
    jmp     p1
p3: cs call [inp_callback]
    jmp     p0
p4: ret
p5: jmp     exit

;
; render the video scene
;   bg 1
;   fg
;   bg 2
;   text
draw:
    is_vblank
    cmp     al, 0
    jnz     >l0
    ret

l0: cs inc  fps

    clear

    frect   0 by 0, 38 by 256, 8 by 0
    vline   38 by 0, 256, 0 by 0

    string  offset micro_font, file_label,   42 by 2, 7 by 0, 1
    string  offset micro_font, editor_label,206 by 2, 7 by 0, 1

    string  offset micro_font, tool_title,  1 by 2, 0 by 0, 1
    string  offset micro_font, tool_title,  2 by 3, 7 by 0, 1

    string  offset micro_font, tool_version, 16 by 8, 0 by 0, 0
    string  offset micro_font, tool_version, 17 by 9, 7 by 0, 0

    hline   0 by 20, 38,        0 by 0
    frect   0 by 21, 38 by 9,   9 by 0
    hline   0 by 30, 38,        0 by 0
    string  offset micro_font, new_label, 8 by 23, 7 by 0, 1

    hline   0 by 32, 38,        0 by 0
    frect   0 by 33, 38 by 9,   9 by 0
    hline   0 by 42, 38,        0 by 0
    string  offset micro_font, load_label, 7 by 35, 7 by 0, 1

    hline   0 by 44, 38,        0 by 0
    frect   0 by 45, 38 by 9,   9 by 0
    hline   0 by 54, 38,        0 by 0
    string  offset micro_font, save_label, 7 by 47, 7 by 0, 1

    hline   38 by 189, 218,     0 by 0
    frect   38 by 190, 218 by 9,8 by 0
    hline   38 by 198, 218,     0 by 0
    string  offset micro_font, banks_label, 4 by 191, 7 by 0, 1

    hline   0 by 200, 38,       0 by 0
    frect   0 by 201, 38 by 9,  9 by 0
    hline   0 by 210, 38,       0 by 0
    string  offset micro_font, add_label, 10 by 203, 7 by 0, 1

    hline   0 by 212, 38,       0 by 0
    frect   0 by 213, 38 by 9,  9 by 0
    hline   0 by 222, 38,       0 by 0
    string  offset micro_font, remove_label, 2 by 215, 7 by 0, 1

    hline   0 by 224, 38,       0 by 0
    frect   0 by 225, 38 by 9,  9 by 0
    hline   0 by 234, 38,       0 by 0
    string  offset micro_font, clear_label, 5 by 227, 7 by 0, 1

    string  offset micro_font, frame_rate, 244 by 251, 0 by 0, 1

    mouse
    flip
    wait_novblank

    ret

;
; entry point
;
start:
    call    init

;
; the heart
;
tool_loop:
    cs call update
    cs call draw
    jmp     tool_loop

;
; the end
;
exit:
    call    reset_timer_isr
    call    reset_keyboard_isr
    mode_03
    mov     ah, 04ch
    mov     al, exit_code
    int     21h
    ret
