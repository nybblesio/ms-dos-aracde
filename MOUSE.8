;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё lumberjacks                                       Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё                                                   Ё
;Ё copyright (C) 2017 jeff panici                    Ё
;Ё https://nybbles.io                                Ё
;Ё                                                   Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды

F_LEFT_MOUSE_BTN    equ 0000_0001xb

mouse_state struc [bp]
    ms_pos  dw  ?
    ms_btn  dw  ?
ends

cursor_happy:
    dw 1111111111111111xb
    dw 1111100000011111xb
    dw 1110000000000111xb
    dw 1100000000000011xb
    dw 1000000000000001xb
    dw 1000000000000001xb
    dw 0000000000000000xb
    dw 0000000000000000xb
    dw 0000000000000000xb
    dw 0000000000000000xb
    dw 1000000000000001xb
    dw 1000000000000001xb
    dw 1100000000000011xb
    dw 1110000000000111xb
    dw 1111100000011111xb
    dw 1111111111111111xb

    dw 0000000000000000xb
    dw 0000000000000000xb
    dw 0000011111100000xb
    dw 0001111111111000xb
    dw 0011111111111100xb
    dw 0011001111001100xb
    dw 0111001111001110xb
    dw 0111111111111110xb
    dw 0111111111111110xb
    dw 0110111111110110xb
    dw 0011001111001100xb
    dw 0011110000111100xb
    dw 0001111111111000xb
    dw 0000011111100000xb
    dw 0000000000000000xb
    dw 0000000000000000xb

cursor_hand:
    dw 1110011111111111xb
    dw 1100001111111111xb
    dw 1100001111111111xb
    dw 1100001111111111xb
    dw 1100001111111111xb
    dw 1100001111111111xb
    dw 1100000010010011xb
    dw 1100000000000001xb
    dw 1000000000000001xb
    dw 0000000000000001xb
    dw 0000000000000001xb
    dw 0000000000000001xb
    dw 0000000000000001xb
    dw 1000000000000011xb
    dw 1100000000000111xb
    dw 1111111111111111xb

    dw 0000000000000000xb
    dw 0001100000000000xb
    dw 0001100000000000xb
    dw 0001100000000000xb
    dw 0001100000000000xb
    dw 0001100000000000xb
    dw 0001100000000000xb
    dw 0001101101101100xb
    dw 0001101101101100xb
    dw 0101111111111100xb
    dw 0101111111111100xb
    dw 0101111111111100xb
    dw 0111111111111000xb
    dw 0011111111111000xb
    dw 0000000000000000xb
    dw 0000000000000000xb

cursor_pointer1:
    dw 0111111111111111xb
    dw 0011111111111111xb
    dw 0001111111111111xb
    dw 0000111111111111xb
    dw 0000011111111111xb
    dw 0000001111111111xb
    dw 0000000111111111xb
    dw 0000000011111111xb
    dw 0000000001111111xb
    dw 0000000000111111xb
    dw 0000000000011111xb
    dw 0000000000001111xb
    dw 0000011000000111xb
    dw 0000111110000011xb
    dw 0001111111000001xb
    dw 0011111111111000xb

    dw 0000000000000000xb
    dw 0000000000000000xb
    dw 0100000000000000xb
    dw 0110000000000000xb
    dw 0111000000000000xb
    dw 0111100000000000xb
    dw 0111110000000000xb
    dw 0111111000000000xb
    dw 0111111100000000xb
    dw 0111111110000000xb
    dw 0111111111000000xb
    dw 0111100111100000xb
    dw 0111000001110000xb
    dw 0110000000011000xb
    dw 0100000000000100xb
    dw 0000000000000000xb

cursor_pointer2:
    dw 1001111111111111xb
    dw 1000111111111111xb
    dw 1000011111111111xb
    dw 1000001111111111xb
    dw 1000000111111111xb
    dw 1000000011111111xb
    dw 1000000001111111xb
    dw 1000000000111111xb
    dw 1000000000011111xb
    dw 1000000000001111xb
    dw 1000000011111111xb
    dw 1000100001111111xb
    dw 1001100001111001xb
    dw 1111110000110110xb
    dw 1111110000110110xb
    dw 1111111000111001xb

    dw 0000000000000000xb
    dw 0010000000000000xb
    dw 0011000000000000xb
    dw 0011100000000000xb
    dw 0011110000000000xb
    dw 0011111000000000xb
    dw 0011111100000000xb
    dw 0011111110000000xb
    dw 0011111111000000xb
    dw 0011111000000000xb
    dw 0011011000000000xb
    dw 0010001100000000xb
    dw 0000001100000000xb
    dw 0000000110000110xb
    dw 0000000110000110xb
    dw 0000000000000000xb

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_draw                                        Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё draws a mouse pointer at the current position     Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
_mouse_draw:
    struc [bp]
                dw ?
        m_bmp   dw ?
        m_pos   dw ?
    ends

    mov     bp, sp
    mov     es, back_buffer_ptr
    mov     si, m_bmp
    mov     di, m_pos
    xor     ax, ax
    xor     bx, bx
    xor     dx, dx
    mov     dh, 16
    mov     bx, 1000_0000_0000_0000xb

m0: ; need to clip on y & x here
    ;
    cs mov  ax, [si]
    test    ax, bx
    jnz     >m1
    es mov  b[di], 0

m1: cs mov  ax, [si + 32]
    test    ax, bx
    jz      >m2
    es mov  b[di], 7

m2: inc     di
    shr     bx, 1
    cmp     bx, 0
    jnz     m0
    add     si, 2
    mov     bx, 1000_0000_0000_0000xb
    add     di, VRAM_PITCH - 16
    dec     dh
    cmp     dh, 0
    jnz     m0
    ret

mo_draw macro
    push    es, bp, ds, ax, bx, si
    mov     bp, #1
    push    ms_pos
    push    #2
    call    _mouse_draw
    add     sp, 4
    pop     si, bx, ax, ds, bp, es
#em

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_buttons                                     Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё returns bitmask in bx                             Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_buttons:
    mov     ax, 0
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_cursor                                      Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё set the mouse cursor                              Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_cursor:
    mov     bp, sp
    mov     ax, bp[2]
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_pos                                         Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё returns mouse x position in cx, and y in dx       Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_pos:
    mov     ax, 3
    int     33h
    ret

mo_read macro
    push    bp, ax, bx, cx, dx
    call    mouse_pos
    mov     bp, #1
    mov     ah, dl
    mov     al, cl
    mov     ms_pos, ax
    mov     ms_btn, bx
    pop     dx, cx, bx, ax, bp
#em

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_reset                                       Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё reset the mouse driver                            Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_reset:
    mov     ax, 0
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_bitmap                                      Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё set pointer to bitmap for mouse cursor            Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_bitmap:
    mov     bp, sp
    mov     ax, 9
    mov     dx, bp[2]
    mov     bx, bp[4]
    mov     cx, bp[6]
    mov     es, cs
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_set_pos                                     Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё sets the mouse cursor position                    Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_set_pos:
    mov     bp, sp
    mov     cx, bp[2]
    mov     dx, bp[4]
    mov     ax, 4
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_range                                       Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё sets the range extent for mouse movement          Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_range:
    mov     bp, sp
    mov     ax, 7
    mov     cx, bp[2]
    mov     dx, bp[4]
    int     33h
    mov     ax, 8
    mov     cx, bp[6]
    mov     dx, bp[8]
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mouse_sens                                        Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё sets the mouse sensitivity for x and y movement   Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mouse_sens:
    mov     bp, sp
    mov     ax, 15
    mov     cx, bp[2]
    mov     dx, bp[4]
    int     33h
    ret

;зддддддддддддддддддддддддддддддддддддддддддддддддддд©
;Ё mo_init                                           Ё
;цддддддддддддддддддддддддддддддддддддддддддддддддддд╢
;Ё initialize the mouse driver                       Ё
;Ё                                                   Ё
;Ё                                                   Ё
;юддддддддддддддддддддддддддддддддддддддддддддддддддды
mo_init:
    call    mouse_reset
    push    0
    call    mouse_cursor
    add     sp, 2
    push    0feh
    push    0
    push    0feh
    push    0
    call    mouse_range
    add     sp, 8
    push    55
    push    55
    call    mouse_sens
    add     sp, 4
    ret
