;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ lumberjacks                                       ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³ copyright (C) 2017 jeff panici                    ³
;³ https://nybbles.io                                ³
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ file structures & variables                       ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
filename macro
    strdef #1
    db     0
#em

; XXX: create table of error messages related
;      to filesystem
;

;ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
;³ file functions and macros                         ³
;ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
;³                                                   ³
;³                                                   ³
;³                                                   ³
;ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
_file_rename:
    mov     bp, sp
    mov     dx, [bp + 2]
    mov     di, [bp]
    mov     ah, 056h
    mov     al, 0
    int     21h
    ret

file_rename macro
    push    bp, dx, di, #1, #2
    call    _file_rename
    add     sp, 4
    pop     di, dx, bp
#em

_file_delete:
    mov     bp, sp
    mov     dx, [bp]
    mov     ah, 041h
    mov     al, 0
    int     21h
    ret

file_delete macro
    push    bp, dx, #1
    call    _file_delete
    add     sp, 2
    pop     dx, bp
#em

_file_create:
    mov     bp, sp
    mov     dx, [bp]
    mov     ah, 03ch
    mov     al, 0
    xor     cx, cx
    int     21h
    ret

file_create macro
    push    bp, dx, cx, #1
    call    _file_create
    add     sp, 2
    pop     cx, dx, bp
#em

_file_read:
    mov     bp, sp
    mov     bx, [bp + 4]
    mov     dx, [bp + 2]
    mov     cx, [bp]
    mov     ah, 03fh
    mov     al, 0
    int     21h
    ret

file_read macro
    push    bp, bx, cx, dx, #1, #2, #3
    call    _file_read
    add     sp, 6
    pop     dx, cx, bx, bp
#em

_file_write:
    mov     bp, sp
    mov     bx, [bp + 4]
    mov     dx, [bp + 2]
    mov     cx, [bp]
    mov     ah, 040h
    mov     al, 0
    int     21h
    ret

file_write macro
    push    bp, bx, cx, dx, #1, #2, #3
    call    _file_write
    add     sp, 6
    pop     dx, cx, bx, bp
#em

_file_seek:
    mov     bp, sp
    xor     cx, cx
    mov     dx, [bp]
    mov     bx, [bp + 2]
    mov     ah, 042h
    mov     al, 1
    int     21h
    ret

file_seek macro
    push    bp, bx, cx, dx, #1, #2
    call    _file_seek
    add     sp, 4
    pop     dx, cx, bx, bp
#em

_file_open:
    mov     bp, sp
    mov     dx, [bp]
    mov     ah, 03dh
    mov     al, 2
    int     21h
    ret

file_open macro
    push    bp, dx, #1
    call    _file_open
    add     sp, 2
    pop     dx, bp
#em

_file_close:
    mov     bp, sp
    mov     bx, [bp]
    mov     ah, 03eh
    mov     al, 0
    int     21h
    ret

file_close macro
    push    bp, bx, #1
    call    _file_close
    add     sp, 2
    pop     bx, bp
#em

